//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBScene
// {
//
//   struct SceneConstants
//   {
//       
//       row_major float4x4 viewProjection_;// Offset:    0
//       row_major float4x4 invViewProjection_;// Offset:   64
//       float4 cameraPosition_;        // Offset:  128
//
//   } scene_;                          // Offset:    0 Size:   144
//
// }
//
// cbuffer CBObject
// {
//
//   struct ObjectConstants
//   {
//       
//       row_major float4x4 world_;     // Offset:    0
//       float4 color_;                 // Offset:   64
//
//   } object_;                         // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBObject                          cbuffer      NA          NA            cb0      1 
// CBScene                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 2
mul r0.xyzw, cb1[1].xyzw, cb0[1].yyyy
mad r0.xyzw, cb0[1].xxxx, cb1[0].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].zzzz, cb1[2].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].wwww, cb1[3].xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, v0.yyyy
mul r1.xyzw, cb1[1].xyzw, cb0[0].yyyy
mad r1.xyzw, cb0[0].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].wwww, cb1[3].xyzw, r1.xyzw
mad r0.xyzw, v0.xxxx, r1.xyzw, r0.xyzw
mul r1.xyzw, cb1[1].xyzw, cb0[2].yyyy
mad r1.xyzw, cb0[2].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].wwww, cb1[3].xyzw, r1.xyzw
mad r0.xyzw, v0.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, cb1[1].xyzw, cb0[3].yyyy
mad r1.xyzw, cb0[3].xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].zzzz, cb1[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].wwww, cb1[3].xyzw, r1.xyzw
mad o0.xyzw, v0.wwww, r1.xyzw, r0.xyzw
mov o1.xyzw, cb0[4].xyzw
ret 
// Approximately 22 instruction slots used
