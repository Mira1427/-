//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBDissolve
// {
//
//   struct DissolveConstants
//   {
//       
//       float amount_;                 // Offset:    0
//
//   } dissolve_;                       // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[2]                  sampler      NA          NA             s2      1 
// mainTexture                       texture  float4          2d             t0      1 
// noiseTexture                      texture  float4          2d             t1      1 
// CBDissolve                        cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB3[1], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- vout.position_.x; v0.y <- vout.position_.y; v0.z <- vout.position_.z; v0.w <- vout.position_.w; 
//   v1.x <- vout.color_.x; v1.y <- vout.color_.y; v1.z <- vout.color_.z; v1.w <- vout.color_.w; 
//   v2.x <- vout.texcoord_.x; v2.y <- vout.texcoord_.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 20 "C:\Users\2230081\Desktop\-\HLSL\Dissolve_PS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s2  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 21
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t1.xyzw, s2
mov r1.x, r1.x  // r1.x <- noise.x

#line 23
min r1.x, r1.x, l(0.999000)
add r1.x, r1.x, cb3[0].x
round_ni r1.x, r1.x  // r1.x <- alpha

#line 24
mov r1.x, -r1.x
add r0.w, r0.w, r1.x

#line 26
mul o0.xyzw, r0.xyzw, v1.xyzw
ret 
// Approximately 10 instruction slots used
