//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBParticle
// {
//
//   struct
//   {
//       
//       float3 emitterPosition_;       // Offset:    0
//       float size_;                   // Offset:   12
//       float time_;                   // Offset:   16
//       float deltaTime_;              // Offset:   20
//
//   } particle_;                       // Offset:    0 Size:    24
//
// }
//
// Resource bind info for particleBuffer
// {
//
//   struct
//   {
//       
//       float4 color_;                 // Offset:    0
//       float3 position_;              // Offset:   16
//       float age_;                    // Offset:   28
//       float3 velocity_;              // Offset:   32
//       int state_;                    // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particleBuffer                        UAV  struct         r/w             u0      1 
// CBParticle                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_4_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_uav_structured u0, 48
dcl_input vThreadID.x
dcl_temps 4
dcl_thread_group 16, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- dtID.x; vThreadID.y <- dtID.y; vThreadID.z <- dtID.z
//
#line 9 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\ParticleInitializer_CS.hlsl"
mov r0.x, vThreadID.x  // r0.x <- id

#line 13
mov r0.y, l(1.000000)  // r0.y <- noiseScale

#line 14
nop 
utof r0.z, r0.x
mul r0.z, r0.y, r0.z

#line 23 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\Common.hlsli"
sincos r0.z, null, r0.z
mul r0.z, r0.z, l(43758.546875)
frc r0.z, r0.z  // r0.z <- <rand return value>

#line 14 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\ParticleInitializer_CS.hlsl"
mov r0.z, r0.z  // r0.z <- f0

#line 15
nop 
mul r0.w, r0.y, r0.z

#line 23 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\Common.hlsli"
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.546875)
frc r0.w, r0.w  // r0.w <- <rand return value>

#line 15 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\ParticleInitializer_CS.hlsl"
mov r0.w, r0.w  // r0.w <- f1

#line 16
nop 
mul r0.y, r0.y, r0.w

#line 23 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\Common.hlsli"
sincos r0.y, null, r0.y
mul r0.y, r0.y, l(43758.546875)
frc r0.y, r0.y  // r0.y <- <rand return value>

#line 16 "C:\Users\2230064\source\repos\Mira1427\-\HLSL\ParticleInitializer_CS.hlsl"
mov r0.y, r0.y  // r0.y <- f2

#line 18
mov r1.xyz, cb0[0].xyzx  // r1.x <- p.position_.x; r1.y <- p.position_.y; r1.z <- p.position_.z

#line 20
mul r1.w, r0.z, l(6.283185)
sincos r1.w, null, r1.w
mul r1.w, r1.w, l(0.500000)  // r1.w <- p.velocity_.x

#line 21
mul r0.w, r0.w, l(2.000000)  // r0.w <- p.velocity_.y

#line 22
mul r2.x, r0.z, l(6.283185)
sincos null, r2.x, r2.x
mul r2.x, r2.x, l(0.500000)  // r2.x <- p.velocity_.z

#line 24
mov r3.x, l(1.000000)  // r3.x <- p.color_.x

#line 25
mul r3.y, r0.z, l(0.500000)  // r3.y <- p.color_.y

#line 26
mul r3.z, r0.z, l(0.050000)  // r3.z <- p.color_.z

#line 27
mul r2.yzw, r3.xxyz, l(0.000000, 3.000000, 3.000000, 3.000000)  // r2.y <- p.color_.x; r2.z <- p.color_.y; r2.w <- p.color_.z

#line 28
mov r0.z, l(1.000000)  // r0.z <- p.color_.w

#line 30
mul r0.y, r0.y, l(10.000000)  // r0.y <- p.age_

#line 31
mov r3.x, l(0)  // r3.x <- p.state_

#line 33
store_structured u0.x, r0.x, l(0), r2.y
store_structured u0.x, r0.x, l(4), r2.z
store_structured u0.x, r0.x, l(8), r2.w
store_structured u0.x, r0.x, l(12), r0.z
store_structured u0.x, r0.x, l(16), r1.x
store_structured u0.x, r0.x, l(20), r1.y
store_structured u0.x, r0.x, l(24), r1.z
store_structured u0.x, r0.x, l(28), r0.y
store_structured u0.x, r0.x, l(32), r1.w
store_structured u0.x, r0.x, l(36), r0.w
store_structured u0.x, r0.x, l(40), r2.x
store_structured u0.x, r0.x, l(44), r3.x

#line 34
ret 
// Approximately 49 instruction slots used
