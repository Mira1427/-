//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBParticle
// {
//
//   struct
//   {
//       
//       float3 emitterPosition_;       // Offset:    0
//       float size_;                   // Offset:   12
//       float time_;                   // Offset:   16
//       float deltaTime_;              // Offset:   20
//
//   } particle_;                       // Offset:    0 Size:    24
//
// }
//
// Resource bind info for particleBuffer
// {
//
//   struct
//   {
//       
//       float4 color_;                 // Offset:    0
//       float3 position_;              // Offset:   16
//       float age_;                    // Offset:   28
//       float3 velocity_;              // Offset:   32
//       int state_;                    // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particleBuffer                        UAV  struct         r/w             u0      1 
// CBParticle                        cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_4_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_uav_structured u0, 48
dcl_input vThreadID.x
dcl_temps 5
dcl_thread_group 16, 1, 1
ld_structured r0.xyzw, vThreadID.x, l(16), u0.xyzw
ld_structured r1.xyz, vThreadID.x, l(32), u0.xyzx
mad r1.w, cb0[1].y, l(-0.500000), r1.y
mad r2.xyz, r1.xwzx, cb0[1].yyyy, r0.xyzx
lt r3.x, r2.y, l(0.000000)
mov r2.w, r1.x
movc r4.xyzw, r3.xxxx, l(0,0,0,0), r2.xyzw
movc r1.xw, r3.xxxx, l(0,0,0,0), r1.wwwz
mov r2.xyz, r0.xyzx
lt r0.x, l(10.000000), r0.w
add r3.w, r0.w, cb0[1].y
movc r2.xyzw, r0.xxxx, r4.xyzw, r2.xyzw
movc r0.yz, r0.xxxx, r1.xxwx, r1.yyzy
mov r3.xyz, r2.xyzx
mov r0.x, r2.w
store_structured u0.xyzw, vThreadID.x, l(16), r3.xyzw
store_structured u0.xyz, vThreadID.x, l(32), r0.xyzx
ret 
// Approximately 18 instruction slots used
