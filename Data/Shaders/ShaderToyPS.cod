//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ShaderToyConstants
// {
//
//   float4 iMouse;                     // Offset:    0 Size:    16 [unused]
//   float4 iChannelResolution[4];      // Offset:   16 Size:    64 [unused]
//   float4 iResolution;                // Offset:   80 Size:    16
//   float iTime;                       // Offset:   96 Size:     4
//   float iFrame;                      // Offset:  100 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ShaderToyConstants                cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB5[7], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 4
div r0.xyzw, v0.xyyy, cb5[5].xyyy
mul r1.xyz, r0.yzwy, l(0.500000, 0.100000, 0.065000, 0.000000)
mad r2.xyzw, cb5[6].xxxx, l(0.040000, 0.020000, -0.005600, 0.028000), r1.xxxx
mul r0.yz, r2.xxyx, l(0.000000, 10.000000, 10.000000, 0.000000)
sincos null, r0.z, r0.z
sincos r0.y, null, r0.y
mad r0.x, r0.x, l(0.500000), l(0.250000)
mad r0.z, r0.z, l(0.192000), r0.x
add r0.z, -r0.z, l(0.500000)
add r0.z, -|r0.z|, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, l(29.230770)
exp r0.z, r0.z
mul r3.xyz, r0.zzzz, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r0.y, r0.y, l(0.096000), r0.x
add r0.y, -r0.y, l(0.500000)
add r0.y, -|r0.y|, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, l(29.230770)
exp r0.y, r0.y
mad r3.xyz, r0.yyyy, l(1.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
sincos null, r0.y, r1.y
sincos r0.z, null, r1.z
add r0.yz, r0.yyzy, r2.zzwz
mul r0.y, r0.y, l(8.000000)
sincos r0.y, null, r0.y
mad r0.y, r0.y, l(0.160000), r0.x
add r0.y, -r0.y, l(0.500000)
add r0.y, -|r0.y|, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, l(29.230770)
exp r0.y, r0.y
mad r1.xyz, r0.yyyy, l(1.000000, 0.800000, 0.000000, 0.000000), r3.xyzx
mul r0.y, r0.z, l(8.000000)
sincos null, r0.y, r0.y
mad r0.y, r0.y, l(0.080000), r0.x
add r0.y, -r0.y, l(0.500000)
add r0.y, -|r0.y|, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, l(29.230770)
exp r0.y, r0.y
mad r1.xyz, r0.yyyy, l(0.500000, 0.000000, 1.000000, 0.000000), r1.xyzx
mul r0.y, cb5[6].x, l(-0.040000)
mad r0.y, r0.w, l(0.250000), r0.y
mul r0.y, r0.y, l(10.000000)
sincos r0.y, null, r0.y
mad r0.x, r0.y, l(0.080000), r0.x
add r0.x, -r0.x, l(0.500000)
add r0.x, -|r0.x|, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, l(29.230770)
exp r0.x, r0.x
mad r0.xyz, r0.xxxx, l(1.000000, 0.500000, 0.000000, 0.000000), r1.xyzx
mul o0.xyz, r0.xyzx, l(0.800000, 0.800000, 0.800000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 56 instruction slots used
