//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBScene
// {
//
//   struct SceneConstants
//   {
//       
//       row_major float4x4 viewProjection_;// Offset:    0
//       row_major float4x4 invViewProjection_;// Offset:   64
//       float4 cameraPosition_;        // Offset:  128
//
//   } scene_;                          // Offset:    0 Size:   144
//
// }
//
// cbuffer CBObject
// {
//
//   struct ObjectConstants
//   {
//       
//       row_major float4x4 world_;     // Offset:    0
//       float4 color_;                 // Offset:   64
//       float2 offset_;                // Offset:   80
//       float2 size_;                  // Offset:   88
//       float2 texPos_;                // Offset:   96
//       float2 texSize_;               // Offset:  104
//
//   } object_;                         // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBObject                          cbuffer      NA          NA            cb0      1 
// CBScene                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 2
mov r0.xz, v0.xxyx
mov r0.yw, cb0[5].xxxy
dp2 r0.z, r0.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r1.xyzw, r0.zzzz, cb0[1].xyzw
mad r0.xyzw, r0.xxxx, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, v0.zzzz, cb0[2].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov r1.xz, l(1.000000,0,1.000000,0)
mov r1.yw, -cb0[5].xxxy
dp2 r0.y, r0.ywyy, r1.zwzz
dp2 r0.x, r0.xwxx, r1.xyxx
mul r1.xyzw, r0.yyyy, cb1[1].xyzw
mad r1.xyzw, r0.xxxx, cb1[0].xyzw, r1.xyzw
mad r1.xyzw, r0.zzzz, cb1[2].xyzw, r1.xyzw
mad o0.xyzw, r0.wwww, cb1[3].xyzw, r1.xyzw
mov o1.xyzw, cb0[4].xyzw
mad r0.xy, v1.xyxx, cb0[5].zwzz, cb0[6].xyxx
div o2.xy, r0.xyxx, cb0[6].zwzz
ret 
// Approximately 20 instruction slots used
