//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBScene
// {
//
//   struct SceneConstants
//   {
//       
//       row_major float4x4 viewProjection_;// Offset:    0
//       row_major float4x4 invViewProjection_;// Offset:   64
//       float4 cameraPosition_;        // Offset:  128
//
//   } scene_;                          // Offset:    0 Size:   144
//
// }
//
// cbuffer CBObject
// {
//
//   struct ObjectConstants
//   {
//       
//       row_major float4x4 world_;     // Offset:    0
//       float4 color_;                 // Offset:   64
//
//   } object_;                         // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBObject                          cbuffer      NA          NA            cb0      1 
// CBScene                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[4], immediateIndexed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- vin.position_.x; v0.y <- vin.position_.y; v0.z <- vin.position_.z; v0.w <- vin.position_.w; 
//   o1.x <- <main return value>.color_.x; o1.y <- <main return value>.color_.y; o1.z <- <main return value>.color_.z; o1.w <- <main return value>.color_.w; 
//   o0.x <- <main return value>.position_.x; o0.y <- <main return value>.position_.y; o0.z <- <main return value>.position_.z; o0.w <- <main return value>.position_.w
//
#line 14 "C:\Users\2230064\OneDrive - yamaguchigakuen\チEクトップ\チE᲏制作\HLSL\DebugRendererVS.hlsl"
mul r0.xyzw, cb1[0].xyzw, cb0[0].xxxx
mul r1.xyzw, cb1[1].xyzw, cb0[0].yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[2].xyzw, cb0[0].zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[3].xyzw, cb0[0].wwww
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb1[0].xyzw, cb0[1].xxxx
mul r2.xyzw, cb1[1].xyzw, cb0[1].yyyy
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[2].xyzw, cb0[1].zzzz
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[3].xyzw, cb0[1].wwww
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb1[0].xyzw, cb0[2].xxxx
mul r3.xyzw, cb1[1].xyzw, cb0[2].yyyy
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[2].xyzw, cb0[2].zzzz
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[3].xyzw, cb0[2].wwww
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb1[0].xyzw, cb0[3].xxxx
mul r4.xyzw, cb1[1].xyzw, cb0[3].yyyy
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb1[2].xyzw, cb0[3].zzzz
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb1[3].xyzw, cb0[3].wwww
add r3.xyzw, r3.xyzw, r4.xyzw
mul r0.xyzw, r0.xyzw, v0.xxxx
mul r1.xyzw, r1.xyzw, v0.yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.xyzw, v0.zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.xyzw, v0.wwww
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position_.x; r0.y <- vout.position_.y; r0.z <- vout.position_.z; r0.w <- vout.position_.w

#line 15
mov r1.xyzw, cb0[4].xyzw  // r1.x <- vout.color_.x; r1.y <- vout.color_.y; r1.z <- vout.color_.z; r1.w <- vout.color_.w

#line 17
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
ret 
// Approximately 39 instruction slots used
